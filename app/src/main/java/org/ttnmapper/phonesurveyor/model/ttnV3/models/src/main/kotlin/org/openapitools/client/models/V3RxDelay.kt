/**
 * The Things Stack for LoRaWAN v3 API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * Values: _0,_1,_2,_3,_4,_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15
 */

enum class V3RxDelay(val value: kotlin.String) {

    @Json(name = "RX_DELAY_0")
    _0("RX_DELAY_0"),

    @Json(name = "RX_DELAY_1")
    _1("RX_DELAY_1"),

    @Json(name = "RX_DELAY_2")
    _2("RX_DELAY_2"),

    @Json(name = "RX_DELAY_3")
    _3("RX_DELAY_3"),

    @Json(name = "RX_DELAY_4")
    _4("RX_DELAY_4"),

    @Json(name = "RX_DELAY_5")
    _5("RX_DELAY_5"),

    @Json(name = "RX_DELAY_6")
    _6("RX_DELAY_6"),

    @Json(name = "RX_DELAY_7")
    _7("RX_DELAY_7"),

    @Json(name = "RX_DELAY_8")
    _8("RX_DELAY_8"),

    @Json(name = "RX_DELAY_9")
    _9("RX_DELAY_9"),

    @Json(name = "RX_DELAY_10")
    _10("RX_DELAY_10"),

    @Json(name = "RX_DELAY_11")
    _11("RX_DELAY_11"),

    @Json(name = "RX_DELAY_12")
    _12("RX_DELAY_12"),

    @Json(name = "RX_DELAY_13")
    _13("RX_DELAY_13"),

    @Json(name = "RX_DELAY_14")
    _14("RX_DELAY_14"),

    @Json(name = "RX_DELAY_15")
    _15("RX_DELAY_15");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is V3RxDelay) "$data" else null

        /**
         * Returns a valid [V3RxDelay] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): V3RxDelay? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

