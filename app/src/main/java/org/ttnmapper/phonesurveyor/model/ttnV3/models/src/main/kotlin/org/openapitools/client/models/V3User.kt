/**
 * The Things Stack for LoRaWAN v3 API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.V3ContactInfo
import org.openapitools.client.models.V3Picture
import org.openapitools.client.models.V3State
import org.openapitools.client.models.V3UserIdentifiers

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * User is the message that defines a user on the network.
 *
 * @param ids 
 * @param createdAt When the user was created. This information is public and can be seen by any authenticated user in the network.
 * @param updatedAt When the user was last updated. This information is public and can be seen by any authenticated user in the network.
 * @param deletedAt When the user was deleted. This information is public and can be seen by any authenticated user in the network.
 * @param name The name of the user. This information is public and can be seen by any authenticated user in the network.
 * @param description A description for the user. This information is public and can be seen by any authenticated user in the network.
 * @param attributes Key-value attributes for this users. Typically used for storing integration-specific data.
 * @param contactInfo Contact information for this user. Typically used to indicate who to contact with security/billing questions about the user.
 * @param primaryEmailAddress Primary email address that can be used for logging in. This address is not public, use contact_info for that.
 * @param primaryEmailAddressValidatedAt When the primary email address was validated. Note that email address validation is not required on all networks.
 * @param password The password field is only considered when creating a user. It is not returned on API calls, and can not be updated by updating the User. See the UpdatePassword method of the UserRegistry service for more information.
 * @param passwordUpdatedAt 
 * @param requirePasswordUpdate 
 * @param state 
 * @param stateDescription A description for the state field. This field can only be modified by admins, and should typically only be updated when also updating `state`.
 * @param admin This user is an admin. This information is public and can be seen by any authenticated user in the network. This field can only be modified by other admins.
 * @param temporaryPassword The temporary password can only be used to update a user's password; never returned on API calls. It is not returned on API calls, and can not be updated by updating the User. See the CreateTemporaryPassword method of the UserRegistry service for more information.
 * @param temporaryPasswordCreatedAt 
 * @param temporaryPasswordExpiresAt 
 * @param profilePicture 
 */
@JsonClass(generateAdapter = true)
data class V3User (

    @Json(name = "ids")
    val ids: V3UserIdentifiers? = null,

    /* When the user was created. This information is public and can be seen by any authenticated user in the network. */
    @Json(name = "created_at")
    val createdAt: java.time.OffsetDateTime? = null,

    /* When the user was last updated. This information is public and can be seen by any authenticated user in the network. */
    @Json(name = "updated_at")
    val updatedAt: java.time.OffsetDateTime? = null,

    /* When the user was deleted. This information is public and can be seen by any authenticated user in the network. */
    @Json(name = "deleted_at")
    val deletedAt: java.time.OffsetDateTime? = null,

    /* The name of the user. This information is public and can be seen by any authenticated user in the network. */
    @Json(name = "name")
    val name: kotlin.String? = null,

    /* A description for the user. This information is public and can be seen by any authenticated user in the network. */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* Key-value attributes for this users. Typically used for storing integration-specific data. */
    @Json(name = "attributes")
    val attributes: kotlin.collections.Map<kotlin.String, kotlin.String>? = null,

    /* Contact information for this user. Typically used to indicate who to contact with security/billing questions about the user. */
    @Json(name = "contact_info")
    val contactInfo: kotlin.collections.List<V3ContactInfo>? = null,

    /* Primary email address that can be used for logging in. This address is not public, use contact_info for that. */
    @Json(name = "primary_email_address")
    val primaryEmailAddress: kotlin.String? = null,

    /* When the primary email address was validated. Note that email address validation is not required on all networks. */
    @Json(name = "primary_email_address_validated_at")
    val primaryEmailAddressValidatedAt: java.time.OffsetDateTime? = null,

    /* The password field is only considered when creating a user. It is not returned on API calls, and can not be updated by updating the User. See the UpdatePassword method of the UserRegistry service for more information. */
    @Json(name = "password")
    val password: kotlin.String? = null,

    @Json(name = "password_updated_at")
    val passwordUpdatedAt: java.time.OffsetDateTime? = null,

    @Json(name = "require_password_update")
    val requirePasswordUpdate: kotlin.Boolean? = null,

    @Json(name = "state")
    val state: V3State? = V3State.rEQUESTED,

    /* A description for the state field. This field can only be modified by admins, and should typically only be updated when also updating `state`. */
    @Json(name = "state_description")
    val stateDescription: kotlin.String? = null,

    /* This user is an admin. This information is public and can be seen by any authenticated user in the network. This field can only be modified by other admins. */
    @Json(name = "admin")
    val admin: kotlin.Boolean? = null,

    /* The temporary password can only be used to update a user's password; never returned on API calls. It is not returned on API calls, and can not be updated by updating the User. See the CreateTemporaryPassword method of the UserRegistry service for more information. */
    @Json(name = "temporary_password")
    val temporaryPassword: kotlin.String? = null,

    @Json(name = "temporary_password_created_at")
    val temporaryPasswordCreatedAt: java.time.OffsetDateTime? = null,

    @Json(name = "temporary_password_expires_at")
    val temporaryPasswordExpiresAt: java.time.OffsetDateTime? = null,

    @Json(name = "profile_picture")
    val profilePicture: V3Picture? = null

)

