/**
 * The Things Stack for LoRaWAN v3 API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import org.openapitools.client.models.RuntimeError
import org.openapitools.client.models.V3EndDevices

import org.openapitools.client.infrastructure.ApiClient
import org.openapitools.client.infrastructure.ApiInfrastructureResponse
import org.openapitools.client.infrastructure.ClientException
import org.openapitools.client.infrastructure.ClientError
import org.openapitools.client.infrastructure.ServerException
import org.openapitools.client.infrastructure.ServerError
import org.openapitools.client.infrastructure.MultiValueMap
import org.openapitools.client.infrastructure.RequestConfig
import org.openapitools.client.infrastructure.RequestMethod
import org.openapitools.client.infrastructure.ResponseType
import org.openapitools.client.infrastructure.Success
import org.openapitools.client.infrastructure.toMultiValue

class EndDeviceRegistrySearchApi(basePath: kotlin.String = defaultBasePath) : ApiClient(basePath) {
    companion object {
        @JvmStatic
        val defaultBasePath: String by lazy {
            System.getProperties().getProperty(ApiClient.baseUrlKey, "http://localhost")
        }
    }

    /**
    * Search for end devices in the given application that match the conditions specified in the request.
    * 
    * @param applicationIdsApplicationId  
    * @param idContains Find end devices where the ID contains this substring. (optional)
    * @param nameContains Find end devices where the name contains this substring. (optional)
    * @param descriptionContains Find end devices where the description contains this substring. (optional)
    * @param devEuiContains Find end devices where the (hexadecimal) DevEUI contains this substring. (optional)
    * @param joinEuiContains Find end devices where the (hexadecimal) JoinEUI contains this substring. (optional)
    * @param devAddrContains Find end devices where the (hexadecimal) DevAddr contains this substring. (optional)
    * @param fieldMaskPaths The set of field mask paths. (optional)
    * @param order Order the results by this field path (must be present in the field mask). Default ordering is by ID. Prepend with a minus (-) to reverse the order. (optional)
    * @param limit Limit the number of results per page. (optional)
    * @param page Page number for pagination. 0 is interpreted as 1. (optional)
    * @return V3EndDevices
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ClientException If the API returns a client error response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun endDeviceRegistrySearchSearchEndDevices(applicationIdsApplicationId: kotlin.String, idContains: kotlin.String?, nameContains: kotlin.String?, descriptionContains: kotlin.String?, devEuiContains: kotlin.String?, joinEuiContains: kotlin.String?, devAddrContains: kotlin.String?, fieldMaskPaths: kotlin.collections.List<kotlin.String>?, order: kotlin.String?, limit: kotlin.Long?, page: kotlin.Long?) : V3EndDevices {
        val localVarResponse = endDeviceRegistrySearchSearchEndDevicesWithHttpInfo(applicationIdsApplicationId = applicationIdsApplicationId, idContains = idContains, nameContains = nameContains, descriptionContains = descriptionContains, devEuiContains = devEuiContains, joinEuiContains = joinEuiContains, devAddrContains = devAddrContains, fieldMaskPaths = fieldMaskPaths, order = order, limit = limit, page = page)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as V3EndDevices
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
    * Search for end devices in the given application that match the conditions specified in the request.
    * 
    * @param applicationIdsApplicationId  
    * @param idContains Find end devices where the ID contains this substring. (optional)
    * @param nameContains Find end devices where the name contains this substring. (optional)
    * @param descriptionContains Find end devices where the description contains this substring. (optional)
    * @param devEuiContains Find end devices where the (hexadecimal) DevEUI contains this substring. (optional)
    * @param joinEuiContains Find end devices where the (hexadecimal) JoinEUI contains this substring. (optional)
    * @param devAddrContains Find end devices where the (hexadecimal) DevAddr contains this substring. (optional)
    * @param fieldMaskPaths The set of field mask paths. (optional)
    * @param order Order the results by this field path (must be present in the field mask). Default ordering is by ID. Prepend with a minus (-) to reverse the order. (optional)
    * @param limit Limit the number of results per page. (optional)
    * @param page Page number for pagination. 0 is interpreted as 1. (optional)
    * @return ApiInfrastructureResponse<V3EndDevices?>
    * @throws UnsupportedOperationException If the API returns an informational or redirection response
    * @throws ClientException If the API returns a client error response
    * @throws ServerException If the API returns a server error response
    */
    @Suppress("UNCHECKED_CAST")
    @Throws(UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun endDeviceRegistrySearchSearchEndDevicesWithHttpInfo(applicationIdsApplicationId: kotlin.String, idContains: kotlin.String?, nameContains: kotlin.String?, descriptionContains: kotlin.String?, devEuiContains: kotlin.String?, joinEuiContains: kotlin.String?, devAddrContains: kotlin.String?, fieldMaskPaths: kotlin.collections.List<kotlin.String>?, order: kotlin.String?, limit: kotlin.Long?, page: kotlin.Long?) : ApiInfrastructureResponse<V3EndDevices?> {
        val localVariableConfig = endDeviceRegistrySearchSearchEndDevicesRequestConfig(applicationIdsApplicationId = applicationIdsApplicationId, idContains = idContains, nameContains = nameContains, descriptionContains = descriptionContains, devEuiContains = devEuiContains, joinEuiContains = joinEuiContains, devAddrContains = devAddrContains, fieldMaskPaths = fieldMaskPaths, order = order, limit = limit, page = page)

        return request<Unit, V3EndDevices>(
            localVariableConfig
        )
    }

    /**
    * To obtain the request config of the operation endDeviceRegistrySearchSearchEndDevices
    *
    * @param applicationIdsApplicationId  
    * @param idContains Find end devices where the ID contains this substring. (optional)
    * @param nameContains Find end devices where the name contains this substring. (optional)
    * @param descriptionContains Find end devices where the description contains this substring. (optional)
    * @param devEuiContains Find end devices where the (hexadecimal) DevEUI contains this substring. (optional)
    * @param joinEuiContains Find end devices where the (hexadecimal) JoinEUI contains this substring. (optional)
    * @param devAddrContains Find end devices where the (hexadecimal) DevAddr contains this substring. (optional)
    * @param fieldMaskPaths The set of field mask paths. (optional)
    * @param order Order the results by this field path (must be present in the field mask). Default ordering is by ID. Prepend with a minus (-) to reverse the order. (optional)
    * @param limit Limit the number of results per page. (optional)
    * @param page Page number for pagination. 0 is interpreted as 1. (optional)
    * @return RequestConfig
    */
    fun endDeviceRegistrySearchSearchEndDevicesRequestConfig(applicationIdsApplicationId: kotlin.String, idContains: kotlin.String?, nameContains: kotlin.String?, descriptionContains: kotlin.String?, devEuiContains: kotlin.String?, joinEuiContains: kotlin.String?, devAddrContains: kotlin.String?, fieldMaskPaths: kotlin.collections.List<kotlin.String>?, order: kotlin.String?, limit: kotlin.Long?, page: kotlin.Long?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, List<kotlin.String>>()
            .apply {
                if (idContains != null) {
                    put("id_contains", listOf(idContains.toString()))
                }
                if (nameContains != null) {
                    put("name_contains", listOf(nameContains.toString()))
                }
                if (descriptionContains != null) {
                    put("description_contains", listOf(descriptionContains.toString()))
                }
                if (devEuiContains != null) {
                    put("dev_eui_contains", listOf(devEuiContains.toString()))
                }
                if (joinEuiContains != null) {
                    put("join_eui_contains", listOf(joinEuiContains.toString()))
                }
                if (devAddrContains != null) {
                    put("dev_addr_contains", listOf(devAddrContains.toString()))
                }
                if (fieldMaskPaths != null) {
                    put("field_mask.paths", toMultiValue(fieldMaskPaths.toList(), "multi"))
                }
                if (order != null) {
                    put("order", listOf(order.toString()))
                }
                if (limit != null) {
                    put("limit", listOf(limit.toString()))
                }
                if (page != null) {
                    put("page", listOf(page.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/search/applications/{application_ids.application_id}/devices".replace("{"+"application_ids.application_id"+"}", "$applicationIdsApplicationId"),
            query = localVariableQuery,
            headers = localVariableHeaders,
            body = localVariableBody
        )
    }

}
