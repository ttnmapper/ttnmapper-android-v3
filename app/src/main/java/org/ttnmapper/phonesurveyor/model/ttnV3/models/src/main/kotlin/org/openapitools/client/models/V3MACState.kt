/**
 * The Things Stack for LoRaWAN v3 API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.MACStateDataRateRanges
import org.openapitools.client.models.MACStateJoinAccept
import org.openapitools.client.models.V3ApplicationDownlink
import org.openapitools.client.models.V3Class
import org.openapitools.client.models.V3DataRateIndex
import org.openapitools.client.models.V3DownlinkMessage
import org.openapitools.client.models.V3MACCommand
import org.openapitools.client.models.V3MACParameters
import org.openapitools.client.models.V3MACStateJoinRequest
import org.openapitools.client.models.V3MACVersion
import org.openapitools.client.models.V3PingSlotPeriodValue
import org.openapitools.client.models.V3UplinkMessage

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * MACState represents the state of MAC layer of the device. MACState is reset on each join for OTAA or ResetInd for ABP devices. This is used internally by the Network Server.
 *
 * @param currentParameters 
 * @param desiredParameters 
 * @param deviceClass 
 * @param lorawanVersion 
 * @param lastConfirmedDownlinkAt Time when the last confirmed downlink message or MAC command was scheduled.
 * @param lastDevStatusFCntUp Frame counter value of last uplink containing DevStatusAns.
 * @param pingSlotPeriodicity 
 * @param pendingApplicationDownlink 
 * @param queuedResponses Queued MAC responses. Regenerated on each uplink.
 * @param pendingRequests Pending MAC requests(i.e. sent requests, for which no response has been received yet). Regenerated on each downlink.
 * @param queuedJoinAccept 
 * @param pendingJoinRequest 
 * @param rxWindowsAvailable Whether or not Rx windows are expected to be open. Set to true every time an uplink is received. Set to false every time a successful downlink scheduling attempt is made.
 * @param recentUplinks Recent data uplink messages sorted by time. The number of messages stored may depend on configuration.
 * @param recentDownlinks Recent data downlink messages sorted by time. The number of messages stored may depend on configuration.
 * @param lastNetworkInitiatedDownlinkAt Time when the last network-initiated downlink message was scheduled.
 * @param rejectedAdrDataRateIndexes ADR Data rate index values rejected by the device. Reset each time `current_parameters.channels` change. Elements are sorted in ascending order.
 * @param rejectedAdrTxPowerIndexes ADR TX output power index values rejected by the device. Elements are sorted in ascending order.
 * @param rejectedFrequencies Frequencies rejected by the device.
 * @param lastDownlinkAt Time when the last downlink message was scheduled.
 * @param rejectedDataRateRanges Data rate ranges rejected by the device per frequency.
 * @param lastAdrChangeFCntUp Frame counter of uplink, which confirmed the last ADR parameter change.
 */
@JsonClass(generateAdapter = true)
data class V3MACState (

    @Json(name = "current_parameters")
    val currentParameters: V3MACParameters? = null,

    @Json(name = "desired_parameters")
    val desiredParameters: V3MACParameters? = null,

    @Json(name = "device_class")
    val deviceClass: V3Class? = V3Class.a,

    @Json(name = "lorawan_version")
    val lorawanVersion: V3MACVersion? = V3MACVersion.uNKNOWN,

    /* Time when the last confirmed downlink message or MAC command was scheduled. */
    @Json(name = "last_confirmed_downlink_at")
    val lastConfirmedDownlinkAt: java.time.OffsetDateTime? = null,

    /* Frame counter value of last uplink containing DevStatusAns. */
    @Json(name = "last_dev_status_f_cnt_up")
    val lastDevStatusFCntUp: kotlin.Long? = null,

    @Json(name = "ping_slot_periodicity")
    val pingSlotPeriodicity: V3PingSlotPeriodValue? = null,

    @Json(name = "pending_application_downlink")
    val pendingApplicationDownlink: V3ApplicationDownlink? = null,

    /* Queued MAC responses. Regenerated on each uplink. */
    @Json(name = "queued_responses")
    val queuedResponses: kotlin.collections.List<V3MACCommand>? = null,

    /* Pending MAC requests(i.e. sent requests, for which no response has been received yet). Regenerated on each downlink. */
    @Json(name = "pending_requests")
    val pendingRequests: kotlin.collections.List<V3MACCommand>? = null,

    @Json(name = "queued_join_accept")
    val queuedJoinAccept: MACStateJoinAccept? = null,

    @Json(name = "pending_join_request")
    val pendingJoinRequest: V3MACStateJoinRequest? = null,

    /* Whether or not Rx windows are expected to be open. Set to true every time an uplink is received. Set to false every time a successful downlink scheduling attempt is made. */
    @Json(name = "rx_windows_available")
    val rxWindowsAvailable: kotlin.Boolean? = null,

    /* Recent data uplink messages sorted by time. The number of messages stored may depend on configuration. */
    @Json(name = "recent_uplinks")
    val recentUplinks: kotlin.collections.List<V3UplinkMessage>? = null,

    /* Recent data downlink messages sorted by time. The number of messages stored may depend on configuration. */
    @Json(name = "recent_downlinks")
    val recentDownlinks: kotlin.collections.List<V3DownlinkMessage>? = null,

    /* Time when the last network-initiated downlink message was scheduled. */
    @Json(name = "last_network_initiated_downlink_at")
    val lastNetworkInitiatedDownlinkAt: java.time.OffsetDateTime? = null,

    /* ADR Data rate index values rejected by the device. Reset each time `current_parameters.channels` change. Elements are sorted in ascending order. */
    @Json(name = "rejected_adr_data_rate_indexes")
    val rejectedAdrDataRateIndexes: kotlin.collections.List<V3DataRateIndex>? = null,

    /* ADR TX output power index values rejected by the device. Elements are sorted in ascending order. */
    @Json(name = "rejected_adr_tx_power_indexes")
    val rejectedAdrTxPowerIndexes: kotlin.collections.List<kotlin.Long>? = null,

    /* Frequencies rejected by the device. */
    @Json(name = "rejected_frequencies")
    val rejectedFrequencies: kotlin.collections.List<kotlin.String>? = null,

    /* Time when the last downlink message was scheduled. */
    @Json(name = "last_downlink_at")
    val lastDownlinkAt: java.time.OffsetDateTime? = null,

    /* Data rate ranges rejected by the device per frequency. */
    @Json(name = "rejected_data_rate_ranges")
    val rejectedDataRateRanges: kotlin.collections.Map<kotlin.String, MACStateDataRateRanges>? = null,

    /* Frame counter of uplink, which confirmed the last ADR parameter change. */
    @Json(name = "last_adr_change_f_cnt_up")
    val lastAdrChangeFCntUp: kotlin.Long? = null

)

